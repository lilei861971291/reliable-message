<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.reliable.message.server.dao.MessageConfirmMapper">


    <resultMap id="RM_MessageConfirm" type="com.reliable.message.server.domain.MessageConfirm">
        <result property="id" column="id"/>
        <result property="messageId" column="message_id" />
        <result property="consumerGroup" column="consumer_group" />
        <result property="consumeCount" column="consume_count" />
        <result property="producerMessageId" column="producer_message_id" />
        <result property="sendTimes" column="send_times" />
        <result property="dead" column="dead" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="confirmFlag" column="confirm_flag" />
    </resultMap>


    <insert id="batchCreateMqConfirm">
        insert into message_confirm
        (
        id,
        message_id,
        producer_group,
        producer_message_id,
        consumer_group,
        send_times ,
        dead,
        create_time,
        update_time,
        confirm_flag)
        VALUES
        <foreach collection="tpcMqConfirmList" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},
            #{item.messageId,jdbcType=BIGINT},
            #{item.producerGroup,jdbcType=VARCHAR},
            #{item.producerMessageId,jdbcType=BIGINT},
            #{item.consumerGroup,jdbcType=VARCHAR},
            #{item.sendTimes,jdbcType=INTEGER},
            #{item.dead,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.confirmFlag,jdbcType=INTEGER}
            )
        </foreach>
    </insert>


    <select id="getConfirmIdByGroupAndKey" >
         SELECT id
    FROM message_confirm
    WHERE consumer_group = #{consumerGroup} AND producer_message_id = #{producerMessageId}
    </select>


    <update id="confirmReceiveMessage">
        UPDATE message_confirm
        SET status = 20, consume_count = consume_count + 1
        WHERE id = #{confirmId} AND status = 10
    </update>

    <update id="confirmConsumedMessage">
    UPDATE message_confirm
    SET status = 30
    WHERE id = #{confirmId} AND status in (10, 20)
  </update>

    <delete id="confirmFinishMessage" >
        UPDATE message_confirm SET confirm_flag =1 WHERE id = #{id}
    </delete>

    <select id="getMessageConfirmCountByProducerMessageId" parameterType="java.lang.String" resultType="java.lang.Integer" >
        SELECT count(*) FROM message_confirm WHERE producer_message_id = #{producerMessageId} and confirm_flag = 0
    </select>


    <select id="getMessageConfirmsByProducerMessageId" parameterType="java.lang.String" resultMap="RM_MessageConfirm">
        SELECT * FROM message_confirm WHERE producer_message_id = #{producerMessageId} AND dead = 0 and confirm_flag = 0
    </select>

    <update id="updateById" >
      UPDATE message_confirm
      SET send_times = #{sendTimes} ,dead = #{dead},update_time = #{updateTime}
      WHERE id = #{id}
    </update>


    <delete id="deleteMessageConfirmById" parameterType="java.lang.String" >

        DELETE FROM message_confirm WHERE id = #{id}

    </delete>

    <select id="getMessageConfirmsByMessageId" parameterType="java.lang.String" resultMap="RM_MessageConfirm">
        SELECT * FROM message_confirm WHERE message_id = #{messageId}
    </select>



    <select id="getUnConfirmMessage" parameterType="com.alibaba.fastjson.JSONObject" resultMap="RM_MessageConfirm">

          SELECT * FROM message_confirm WHERE confirm_flag = 0 AND create_time &lt; #{scanTime}
        AND MOD(id, #{shardingTotalCount}) = #{shardingItem} ORDER BY update_time ASC Limit 0, #{fetchNum}
    </select>

</mapper>